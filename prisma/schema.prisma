// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  username String  @unique
  imageUrl String?

  // password String

  // sessions Session[]

  tracks   userOnTrack[]
}

// model Session {
//   id             String   @id @default(cuid())
//   expirationDate DateTime

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   userId String

//   // non-unique foreign key
//   @@index([userId])
// }

model Track {
  id         String @id @default(cuid())
  trackName  String
  trackIntro String?
  startTime  DateTime
  endTime    DateTime
  imageUrl   String?

  users      userOnTrack[]
}

// model record {
//   id String @id @default(cuid())
//   recordTime DateTime
//   imageUrl String?
//   users User[] // replace this with explicit relationship
//   tracks Track[] // replace this with explicit relationship
// }

model userOnTrack {
  score Int @default(0)

  user User @relation(fields: [userId], references: [id])
  userId String

  track Track @relation(fields: [trackId], references: [id])
  trackId String

  @@id([userId, trackId])
}
